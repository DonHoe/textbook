import{_ as s,c as a,o as n,N as l}from"./chunks/framework.d71a89c9.js";const C=JSON.parse('{"title":"回溯算法","description":"","frontmatter":{},"headers":[],"relativePath":"chapter/code/leetcode/backtracking.md"}'),e={name:"chapter/code/leetcode/backtracking.md"},o=l(`<h1 id="回溯算法" tabindex="-1">回溯算法 <a class="header-anchor" href="#回溯算法" aria-label="Permalink to &quot;回溯算法&quot;">​</a></h1><h4 id="核心框架" tabindex="-1">核心框架 <a class="header-anchor" href="#核心框架" aria-label="Permalink to &quot;核心框架&quot;">​</a></h4><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[];</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">backtrack</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">路径</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 选择列表</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//这里可以做一些剪枝操作</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> 满足结束条件</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">路径</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> 选择 in 选择列表</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//这里也可以做一些剪枝操作</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        做选择</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">backtrack</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">路径</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 选择列表</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        撤销选择</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><hr><h4 id="已刷题目列表" tabindex="-1">已刷题目列表 <a class="header-anchor" href="#已刷题目列表" aria-label="Permalink to &quot;已刷题目列表&quot;">​</a></h4><ul><li><a href="https://leetcode-cn.com/problems/permutations/" target="_blank" rel="noreferrer">46.全排列</a></li><li><a href="https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/" target="_blank" rel="noreferrer">17.电话号码的字母组合</a></li><li><a href="https://leetcode-cn.com/problems/subsets/" target="_blank" rel="noreferrer">78.子集</a></li><li><a href="https://leetcode-cn.com/problems/subsets-ii/" target="_blank" rel="noreferrer">90.子集</a></li></ul>`,6),p=[o];function t(r,c,i,D,y,A){return n(),a("div",null,p)}const d=s(e,[["render",t]]);export{C as __pageData,d as default};
