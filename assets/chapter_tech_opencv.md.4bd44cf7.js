import{_ as s,o as a,c as n,S as l}from"./chunks/framework.e9d044e1.js";const h=JSON.parse('{"title":"opencv","description":"","frontmatter":{},"headers":[],"relativePath":"chapter/tech/opencv.md","filePath":"chapter/tech/opencv.md"}'),p={name:"chapter/tech/opencv.md"},o=l(`<h1 id="opencv" tabindex="-1">opencv <a class="header-anchor" href="#opencv" aria-label="Permalink to &quot;opencv&quot;">​</a></h1><h3 id="图片组成" tabindex="-1">图片组成 <a class="header-anchor" href="#图片组成" aria-label="Permalink to &quot;图片组成&quot;">​</a></h3><p>图像由像素组成，每个像素为一个颜色点，许多的点汇聚成一个图像面。<br> 在计算机中以数组矩阵的形式处理图片，灰度/二值图片以二维数组存储（[行,列]），彩色图片为三维数组（[行,列,通道]），通道有三个，依次为b(蓝),g(绿),r(红)，每一个值为[0,225]之间的数字。</p><h3 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> cv2</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> numpy </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#下面都以这张图片作为案例</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#读取图片</span></span>
<span class="line"><span style="color:#A6ACCD;">img </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">imread</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dog.jpeg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#二值/灰度为(行数,列数)，彩色为(行数,列数,通道数)</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shape</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#像素数目</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">size</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#数据类型</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">dtype</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#拆分bgr通道</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">dog</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#合并通道</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">merge</span><span style="color:#89DDFF;">([</span><span style="color:#82AAFF;">r</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> g</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> b</span><span style="color:#89DDFF;">])</span></span></code></pre></div><h3 id="图像运算" tabindex="-1">图像运算 <a class="header-anchor" href="#图像运算" aria-label="Permalink to &quot;图像运算&quot;">​</a></h3><h4 id="图像加法运算" tabindex="-1">图像加法运算 <a class="header-anchor" href="#图像加法运算" aria-label="Permalink to &quot;图像加法运算&quot;">​</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#对于8位二进制的像素点，直接相加会导致mod 256，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#使用add函数，是的值最大到255，实现提升饱和度的作用</span></span>
<span class="line"><span style="color:#A6ACCD;">img1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#加权相加</span></span>
<span class="line"><span style="color:#A6ACCD;">img3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addWeighted</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">src1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> src2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="按位运算" tabindex="-1">按位运算 <a class="header-anchor" href="#按位运算" aria-label="Permalink to &quot;按位运算&quot;">​</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 数据按二进制每一位进行计算</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按位与</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bitwise_and</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按位或</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bitwise_or</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按位取反</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bitwise_not</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按位异或 可用于加密解密</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bitwise_xor</span><span style="color:#89DDFF;">()</span></span></code></pre></div><h4 id="图片分层" tabindex="-1">图片分层 <a class="header-anchor" href="#图片分层" aria-label="Permalink to &quot;图片分层&quot;">​</a></h4><p>每个像素点有n(通道数)个8位二进制数字组成。<br> 对于每个数字均可提取出每个二进制位，填入像素矩阵，实现分层。<br> 用处：隐式水印（利用最后一位的分层矩阵，实现二值水印图像）</p><h3 id="色彩转换" tabindex="-1">色彩转换 <a class="header-anchor" href="#色彩转换" aria-label="Permalink to &quot;色彩转换&quot;">​</a></h3><p>灰度公式:<code>Gray=0.299*R+0.587*G+0.114*B</code></p>`,14),e=[o];function t(c,r,i,y,F,D){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{h as __pageData,d as default};
