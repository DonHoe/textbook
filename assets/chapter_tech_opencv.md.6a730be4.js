import{_ as s,o as a,c as n,S as l}from"./chunks/framework.e9d044e1.js";const d=JSON.parse('{"title":"opencv","description":"","frontmatter":{},"headers":[],"relativePath":"chapter/tech/opencv.md","filePath":"chapter/tech/opencv.md"}'),p={name:"chapter/tech/opencv.md"},o=l(`<h1 id="opencv" tabindex="-1">opencv <a class="header-anchor" href="#opencv" aria-label="Permalink to &quot;opencv&quot;">​</a></h1><h2 id="图片组成" tabindex="-1">图片组成 <a class="header-anchor" href="#图片组成" aria-label="Permalink to &quot;图片组成&quot;">​</a></h2><p>图像由像素组成，每个像素为一个颜色点，许多的点汇聚成一个图像面。<br> 在计算机中以数组矩阵的形式处理图片，灰度/二值图片以二维数组存储（[行,列]），彩色图片为三维数组（[行,列,通道]），通道有三个，依次为b(蓝),g(绿),r(红)，每一个值为[0,225]之间的数字。</p><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> cv2</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> numpy </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#下面都以这张图片作为案例</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#读取图片</span></span>
<span class="line"><span style="color:#A6ACCD;">img </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">imread</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dog.jpeg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#二值/灰度为(行数,列数)，彩色为(行数,列数,通道数)</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shape</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#像素数目</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">size</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#数据类型</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">dtype</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#拆分bgr通道</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">dog</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#合并通道</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">merge</span><span style="color:#89DDFF;">([</span><span style="color:#82AAFF;">r</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> g</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> b</span><span style="color:#89DDFF;">])</span></span></code></pre></div><h2 id="图像运算" tabindex="-1">图像运算 <a class="header-anchor" href="#图像运算" aria-label="Permalink to &quot;图像运算&quot;">​</a></h2><h3 id="图像加法运算" tabindex="-1">图像加法运算 <a class="header-anchor" href="#图像加法运算" aria-label="Permalink to &quot;图像加法运算&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#对于8位二进制的像素点，直接相加会导致mod 256，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#使用add函数，是的值最大到255，实现提升饱和度的作用</span></span>
<span class="line"><span style="color:#A6ACCD;">img1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#加权相加</span></span>
<span class="line"><span style="color:#A6ACCD;">img3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addWeighted</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">src1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> src2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="按位运算" tabindex="-1">按位运算 <a class="header-anchor" href="#按位运算" aria-label="Permalink to &quot;按位运算&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 数据按二进制每一位进行计算</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按位与</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bitwise_and</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按位或</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bitwise_or</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按位取反</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bitwise_not</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按位异或 可用于加密解密</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bitwise_xor</span><span style="color:#89DDFF;">()</span></span></code></pre></div><h3 id="图片分层" tabindex="-1">图片分层 <a class="header-anchor" href="#图片分层" aria-label="Permalink to &quot;图片分层&quot;">​</a></h3><p>每个像素点有n(通道数)个8位二进制数字组成。<br> 对于每个数字均可提取出每个二进制位，填入像素矩阵，实现分层。<br> 用处：隐式水印（利用最后一位的分层矩阵，实现二值水印图像）</p><h2 id="色彩转换" tabindex="-1">色彩转换 <a class="header-anchor" href="#色彩转换" aria-label="Permalink to &quot;色彩转换&quot;">​</a></h2><p>灰度公式:<code>Gray=0.299*R+0.587*G+0.114*B</code></p><h3 id="类型转换函数" tabindex="-1">类型转换函数 <a class="header-anchor" href="#类型转换函数" aria-label="Permalink to &quot;类型转换函数&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 以彩色转灰度为例 </span></span>
<span class="line"><span style="color:#A6ACCD;">gray </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cvtColor</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">COLOR_BGR2GRAY</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="几何变换" tabindex="-1">几何变换 <a class="header-anchor" href="#几何变换" aria-label="Permalink to &quot;几何变换&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 缩放</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># dsize:目标尺寸 dst目标类型 fx横向缩放比例 fy纵向缩放比例 interpolation插值类型</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resize</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> dsize</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> dst</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> fx</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> fy</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> interpolation</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 翻转 flipCode：0上下翻转 1左右翻转 -1同时翻转</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flip</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> flipCode</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 仿射 平移+旋转</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">warpAffine</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 透视</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">warpPerspective</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 复制</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">remap</span></span></code></pre></div><h2 id="阈值处理" tabindex="-1">阈值处理 <a class="header-anchor" href="#阈值处理" aria-label="Permalink to &quot;阈值处理&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">threshold</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> thresh</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> maxval</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> dst</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="图像平滑处理" tabindex="-1">图像平滑处理 <a class="header-anchor" href="#图像平滑处理" aria-label="Permalink to &quot;图像平滑处理&quot;">​</a></h2><p>过滤掉图像内部的噪声</p><h3 id="均值滤波" tabindex="-1">均值滤波 <a class="header-anchor" href="#均值滤波" aria-label="Permalink to &quot;均值滤波&quot;">​</a></h3><p>以当前像素点为中心，取周围M*N个像素的平均值作为滤波均值。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># ksize 是滤波核的大小 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># anchor 是锚点，其默认值是(-1, -1),表示中心</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">blur</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> ksize</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> anchor</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> borderType </span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="方框滤波" tabindex="-1">方框滤波 <a class="header-anchor" href="#方框滤波" aria-label="Permalink to &quot;方框滤波&quot;">​</a></h3><p>与均值滤波相似，区别在于可用normalize设置使用像素均值还是总和</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># ddepth图像深度 默认-1 与原图相同</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ksize滤波核大小</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># anchor 是锚点，其默认值是(-1, -1),表示中心</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># normalize 表示在滤波时是否进行归一化 </span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">boxFilter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> ddepth</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> ksize</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> anchor</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> normalize</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> borderType </span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="高斯滤波" tabindex="-1">高斯滤波 <a class="header-anchor" href="#高斯滤波" aria-label="Permalink to &quot;高斯滤波&quot;">​</a></h3><p>求均值时加入权重值，离中心点越远，权重越小</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># ksize 是滤波核的大小</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># sigmaX 是卷积核在水平方向上的标准差</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># sigmaY 是卷积核在垂直方向上的标准差</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 计算公式: sigmaX = 0.3×[(ksize.width-1)×0.5-1] + 0.8</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#          sigmaY = 0.3×[(ksize.height-1)×0.5-1] + 0.8</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GaussianBlur</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> ksize</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> sigmaX</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> sigmaY</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> borderType </span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="中值滤波" tabindex="-1">中值滤波 <a class="header-anchor" href="#中值滤波" aria-label="Permalink to &quot;中值滤波&quot;">​</a></h3><p>使用像素值的中间值来替代当前像素点的像素值，前面使用的是均值</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># ksize 是滤波核的大小</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">medianBlur</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> ksize</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="双边滤波" tabindex="-1">双边滤波 <a class="header-anchor" href="#双边滤波" aria-label="Permalink to &quot;双边滤波&quot;">​</a></h3><p>前面的滤波算法会导致图像边缘出现模糊，在双边滤波中，当处在边缘时，与当前点色彩相近的像素点会被给予较大的权重值；而与当前色彩差别较大的像素点会被给予较小的权重值，这样就保护了边缘信息。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># d 是在滤波时选取的空间距离参数 推荐 d=5</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># sigmaColor 是滤波处理时选取的颜色差值范围</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># sigmaSpace 是坐标空间中的 sigma 值</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bilateralFilter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> d</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> sigmaColor</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> sigmaSpace</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> borderType </span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="_2d-卷积" tabindex="-1">2D 卷积 <a class="header-anchor" href="#_2d-卷积" aria-label="Permalink to &quot;2D 卷积&quot;">​</a></h3><p>使用自定义卷积核计算当前像素值</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># ddepth图像深度 默认-1 与原图相同</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># kernel 是卷积核，是一个单通道的数组</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># anchor 是锚点，其默认值是(-1, -1)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># delta 是修正值，它是可选项</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter2D</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> ddepth</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kernel</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> anchor</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> delta</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> borderType </span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="形态学操作" tabindex="-1">形态学操作 <a class="header-anchor" href="#形态学操作" aria-label="Permalink to &quot;形态学操作&quot;">​</a></h2><h3 id="腐蚀" tabindex="-1">腐蚀 <a class="header-anchor" href="#腐蚀" aria-label="Permalink to &quot;腐蚀&quot;">​</a></h3><p>够将图像的边界点消除，使图像沿着边界向内收缩， 也可以将小于指定结构体元素的部分去除。<br> 例如：腐蚀操作可将原始图像内的毛刺腐蚀掉。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># kernel 代表腐蚀操作时所采用的结构类型</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># anchor 代表 element 结构中锚点的位置。该值默认为(-1,-1)，在核的中心位置</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># iterations 是腐蚀操作迭代的次数，该值默认为 1</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">erode</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kernel</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> anchor</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> iterations</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> borderType</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> borderValue</span><span style="color:#89DDFF;">]]]]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="膨胀" tabindex="-1">膨胀 <a class="header-anchor" href="#膨胀" aria-label="Permalink to &quot;膨胀&quot;">​</a></h3><p>与腐蚀相反，可以扩大边界</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># ddepth图像深度 默认-1 与原图相同</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># kernel 是卷积核，是一个单通道的数组</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># anchor 是锚点，其默认值是(-1, -1)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># delta 是修正值，它是可选项</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dilate</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kernel</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> anchor</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> iterations</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> borderType</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;">borderValue</span><span style="color:#89DDFF;">]]]])</span></span></code></pre></div><h3 id="通用形态学函数" tabindex="-1">通用形态学函数 <a class="header-anchor" href="#通用形态学函数" aria-label="Permalink to &quot;通用形态学函数&quot;">​</a></h3><p>腐蚀操作和膨胀操作是形态学运算的基础，将腐蚀和膨胀操作进行组合</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># op 代表操作类型</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">morphologyEx</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> op</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kernel</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> anchor</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> iterations</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> borderType</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;">borderValue</span><span style="color:#89DDFF;">]]]]</span><span style="color:#82AAFF;">] </span><span style="color:#89DDFF;">)</span></span></code></pre></div><table><thead><tr><th>类型</th><th>说明</th><th>操作</th></tr></thead><tbody><tr><td>cv2.MORPH_ERODE</td><td>腐蚀</td><td>erode(src)</td></tr><tr><td>cv2.MORPH_DILATE</td><td>膨胀</td><td>dilate(src)</td></tr><tr><td>cv2.MORPH_OPEN</td><td>开运算</td><td>dilate(erode(src))</td></tr><tr><td>cv2.MORPH_CLOSE</td><td>闭运算</td><td>erode(dilate(src))</td></tr><tr><td>cv2.MORPH_GRADIENT</td><td>形态学梯度运算</td><td>dilate(src)-erode(src)</td></tr><tr><td>cv2.MORPH_TOPHAT</td><td>顶帽运算</td><td>src-open(src)</td></tr><tr><td>cv2.MORPH_BLACKHAT</td><td>黑帽运算</td><td>close(src)-src</td></tr><tr><td>cv2.MORPH_HITMISS</td><td>击中击不中</td><td>intersection(erode(src),erode(srcI))</td></tr></tbody></table><h3 id="开运算" tabindex="-1">开运算 <a class="header-anchor" href="#开运算" aria-label="Permalink to &quot;开运算&quot;">​</a></h3><p>先将图像腐蚀，再对腐蚀的结果进行膨胀，可以实现去噪,即去除物体外部的毛刺</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">opening </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">morphologyEx</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">MORPH_OPEN</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kernel</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="闭运算" tabindex="-1">闭运算 <a class="header-anchor" href="#闭运算" aria-label="Permalink to &quot;闭运算&quot;">​</a></h3><p>先膨胀、后腐蚀的运算，可实现去除物体内部的小孔</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">closing </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">morphologyEx</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">MORPH_CLOSE</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kernel</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="形态学梯度运算" tabindex="-1">形态学梯度运算 <a class="header-anchor" href="#形态学梯度运算" aria-label="Permalink to &quot;形态学梯度运算&quot;">​</a></h3><p>用图像的膨胀图像减腐蚀图像的操作，该操作可以获取原始图像中前景 图像的边缘。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">morphologyEx</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">MORPH_GRADIENT</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kernel</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="礼帽运算" tabindex="-1">礼帽运算 <a class="header-anchor" href="#礼帽运算" aria-label="Permalink to &quot;礼帽运算&quot;">​</a></h3><p>礼帽运算是用原始图像减去其开运算图像的操作。够获取图像的噪声信息。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">morphologyEx</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">MORPH_TOPHAT</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kernel</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="黑帽运算" tabindex="-1">黑帽运算 <a class="header-anchor" href="#黑帽运算" aria-label="Permalink to &quot;黑帽运算&quot;">​</a></h3><p>黑帽运算是用闭运算图像减去原始图像的操作。能够获取图像内部的小孔。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">morphologyEx</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">MORPH_BLACKHAT</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> kernel</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="核函数" tabindex="-1">核函数 <a class="header-anchor" href="#核函数" aria-label="Permalink to &quot;核函数&quot;">​</a></h3><p>上述所有的操作需要一个kernel，可以通过下面的函数生成</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># shape cv2.MORPH_RECT 矩形 cv2.MORPH_CROSS 十字结果 cv2.MORPH_ELLIPSE 椭圆</span></span>
<span class="line"><span style="color:#A6ACCD;">retval </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getStructuringElement</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> shape</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> ksize</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> anchor</span><span style="color:#89DDFF;">])</span></span></code></pre></div><h2 id="图像梯度" tabindex="-1">图像梯度 <a class="header-anchor" href="#图像梯度" aria-label="Permalink to &quot;图像梯度&quot;">​</a></h2><p>图像梯度计算的是图像变化的速度，即边缘部分像素值的变化梯度较大，可以得到更复杂的边缘信息。</p><h3 id="sobel算子函数" tabindex="-1">Sobel算子函数 <a class="header-anchor" href="#sobel算子函数" aria-label="Permalink to &quot;Sobel算子函数&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># x轴计算</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Sobel</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">CV_64F</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">convertScaleAbs</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">x</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 轴计算</span></span>
<span class="line"><span style="color:#A6ACCD;">y </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Sobel</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">CV_64F</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">y </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">convertScaleAbs</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">y</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 合并</span></span>
<span class="line"><span style="color:#A6ACCD;">z </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addWeighted</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">x</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> y</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="scharr算子函数" tabindex="-1">Scharr算子函数 <a class="header-anchor" href="#scharr算子函数" aria-label="Permalink to &quot;Scharr算子函数&quot;">​</a></h3><p>精度更高</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># x轴计算</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scharr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">CV_64F</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">convertScaleAbs</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">x</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 轴计算</span></span>
<span class="line"><span style="color:#A6ACCD;">y </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scharr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">img</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">CV_64F</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">y </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">convertScaleAbs</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">y</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 合并</span></span>
<span class="line"><span style="color:#A6ACCD;">z </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addWeighted</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">x</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> y</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="laplacian算子函数" tabindex="-1">Laplacian算子函数 <a class="header-anchor" href="#laplacian算子函数" aria-label="Permalink to &quot;Laplacian算子函数&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Laplacian</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">gray</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">CV_64F</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">convertScaleAbs</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">x</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="canny边缘检测" tabindex="-1">Canny边缘检测 <a class="header-anchor" href="#canny边缘检测" aria-label="Permalink to &quot;Canny边缘检测&quot;">​</a></h2><p>一种使用多级边缘检测算法检测边缘的方法</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># threshold1 表示处理过程中的第一个阈值</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># threshold2 表示处理过程中的第二个阈值</span></span>
<span class="line"><span style="color:#A6ACCD;">edges </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Canny</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> image</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> threshold1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> threshold2</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> apertureSize</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> L2gradient</span><span style="color:#89DDFF;">]])</span></span></code></pre></div><h2 id="图像金字塔" tabindex="-1">图像金字塔 <a class="header-anchor" href="#图像金字塔" aria-label="Permalink to &quot;图像金字塔&quot;">​</a></h2><p>缩小放大图片</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 向下采样</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># dstsize 默认为原来的一半</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pyrDown</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> dstsize</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> borderType</span><span style="color:#89DDFF;">]]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 向上采样</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># dstsize 默认为原来的两倍</span></span>
<span class="line"><span style="color:#A6ACCD;">dst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pyrUp</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> src</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> dstsize</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> borderType</span><span style="color:#89DDFF;">]]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="图像轮廓" tabindex="-1">图像轮廓 <a class="header-anchor" href="#图像轮廓" aria-label="Permalink to &quot;图像轮廓&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 找出轮廓</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">findContours</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 画上轮廓</span></span>
<span class="line"><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">drawContours</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 轮廓矩</span></span>
<span class="line"><span style="color:#A6ACCD;">retval </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">moments</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> array</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> binaryImage</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 计算轮廓的面积</span></span>
<span class="line"><span style="color:#A6ACCD;">retval </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">contourArea</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">contour </span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> oriented</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 计算轮廓的长度</span></span>
<span class="line"><span style="color:#A6ACCD;">retval </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">arcLength</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> curve</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> closed </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Hu矩函数</span></span>
<span class="line"><span style="color:#A6ACCD;">hu </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">HuMoments</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> m </span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>绘制轮廓</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 矩形框</span></span>
<span class="line"><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">y</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">w</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">h </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">boundingRect</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> array </span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">retval </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">minAreaRect</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> points </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">points </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">boxPoints</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> box </span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="模板匹配" tabindex="-1">模板匹配 <a class="header-anchor" href="#模板匹配" aria-label="Permalink to &quot;模板匹配&quot;">​</a></h2><p>在图片A中查找与图片B相似的部分</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">matchTemplate</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">image</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> templ</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> method</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;"> mask </span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">)</span></span></code></pre></div>`,91),e=[o];function t(c,r,F,y,D,i){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{d as __pageData,h as default};
